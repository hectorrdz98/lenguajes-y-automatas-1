
# Just reading, searching for something

reading             ReservedWord    * * gettingReserved
reading             Variable        * r variableAssign


# variableAssign area

variableAssign      EqualSign       * r variableValue
variableAssign      *               * l errorInvVarDec

variableValue       Integer         * r variableENDL
variableValue       Float           * r variableENDL
variableValue       Variable        * r variableENDL
variableValue       StringSQ        * r variableENDLStr
variableValue       StringDQ        * r variableENDLStr
variableValue       ReservedWord    * * gettingReserved
variableValue       SingleQuote     * r sendErrorSQ
variableValue       DoubleQuote     * r sendErrorDQ
variableValue       NotValid        * l errorInvVarDecUn
variableValue       *               * l errorInvVarDec

variableValueNotStr Integer         * r variableENDL
variableValueNotStr Float           * r variableENDL
variableValueNotStr Variable        * r variableENDL
variableValueNotStr StringSQ        * r errorStrOp
variableValueNotStr StringDQ        * r errorStrOp
variableValueNotStr ReservedWord    * * gettingReservedNotStr
variableValueNotStr *               * l errorInvOp

variableENDL        BreakLine       * r reading
variableENDL        PlusOperator    * r variableValue
variableENDL        MinusOperator   * r variableValueNotStr
variableENDL        MultiOperator   * r variableValueNotStr
variableENDL        DivOperator     * r variableValueNotStr
variableENDL        PowOperator     * r variableValueNotStr
variableENDL        *               * l errorInvOp

variableENDLStr     BreakLine       * r reading
variableENDLStr     PlusOperator    * r variableValue
variableENDLStr     MinusOperator   * r errorStrOp
variableENDLStr     MultiOperator   * r errorStrOp
variableENDLStr     DivOperator     * r errorStrOp
variableENDLStr     PowOperator     * r errorStrOp
variableENDLStr     *               * l errorInvOp

functionNoParams    OpParenthesis   * r functionNoParams
functionNoParams    CloParenthesis  * r variableENDLStr


# Just exited from reserved.tr

# Function params

funcParamsInit      OpParenthesis   * r funcParams

funcParams          SingleQuote     * r sendErrorSQ
funcParams          DoubleQuote     * r sendErrorDQ
funcParams          Integer         * r funcCheckExp
funcParams          Float           * r funcCheckExp
funcParams          Variable        * r funcCheckExp
funcParams          StringSQ        * r funcCheckExpStr
funcParams          StringDQ        * r funcCheckExpStr
funcParams          CloParenthesis  * r funcENDL
funcParams          *               * l errorFInvCall3

funcCheckExp        CloParenthesis  * r funcENDL
funcCheckExp        PlusOperator    * r funcNeedThing
funcCheckExp        MinusOperator   * r funcNeedThingNotStr
funcCheckExp        MultiOperator   * r funcNeedThingNotStr
funcCheckExp        DivOperator     * r funcNeedThingNotStr
funcCheckExp        PowOperator     * r funcNeedThingNotStr


funcCheckExpStr     CloParenthesis  * r funcENDL
funcCheckExpStr     PlusOperator    * r funcNeedThing
funcCheckExpStr     MinusOperator   * r errorStrOp
funcCheckExpStr     MultiOperator   * r errorStrOp
funcCheckExpStr     DivOperator     * r errorStrOp
funcCheckExpStr     PowOperator     * r errorStrOp
funcCheckExpStr     *               * r errorInvOp

funcNeedThing       SingleQuote     * * funcParams
funcNeedThing       DoubleQuote     * * funcParams
funcNeedThing       Integer         * * funcParams
funcNeedThing       Float           * * funcParams
funcNeedThing       Variable        * * funcParams
funcNeedThing       StringSQ        * * funcParams
funcNeedThing       StringDQ        * * funcParams
funcNeedThing       *               * l errorInvOp

funcNeedThingNotStr Integer         * * funcParams
funcNeedThingNotStr Float           * * funcParams
funcNeedThingNotStr Variable        * * funcParams
funcNeedThingNotStr *               * * errorStrOp

funcENDL            BreakLine       * r reading


# Exited ReservedWordCheck

reservedNotStr      OpParenthesis   * r reservedNotStr
reservedNotStr      CloParenthesis  * r variableENDL


# Errors

sendErrorSQ         BreakLine       * l errorSQ
sendErrorSQ         *               * r sendErrorSQ      

sendErrorDQ         BreakLine       * l errorDQ
sendErrorDQ         *               * r sendErrorDQ   